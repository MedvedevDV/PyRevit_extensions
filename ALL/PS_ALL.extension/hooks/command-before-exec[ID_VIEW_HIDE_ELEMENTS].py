# -*- coding: utf-8 -*-
import clr
import datetime
import os
import xml.etree.ElementTree as ET
clr.AddReference('System.Windows.Forms')
clr.AddReference('System.Drawing')

from System.Windows.Forms import Form, Label, TextBox, Button, DialogResult, FormStartPosition, FormBorderStyle
import System.Drawing
from pyrevit import revit, EXEC_PARAMS
from Autodesk.Revit.DB import Category
from Autodesk.Revit.UI import TaskDialog
from xml.dom import minidom

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–∞—Ä–æ–ª—è –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—É—â–µ–π –¥–∞—Ç—ã
def generate_password():
    today = datetime.datetime.now()
    day = today.day
    month = today.month

    day_str = str(day).zfill(2)
    month_str = str(month).zfill(2)

    password = day_str[0] + month_str[0] + day_str[1] + month_str[1]
    return password

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ XML
def write_pretty_xml(filepath, root):
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–µ—Ä–µ–≤–æ XML –≤ —Å—Ç—Ä–æ–∫—É
    xml_string = ET.tostring(root, encoding='utf-8')
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º minidom –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    formatted_xml = minidom.parseString(xml_string)
    
    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Ç–∞–µ–º—ã–π —Ñ–æ—Ä–º–∞—Ç, —É–±–∏—Ä–∞—è –ª–∏—à–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã
    pretty_xml_as_string = '\n'.join([line for line in formatted_xml.toprettyxml(indent="    ").splitlines() if line.strip()])

    # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª –¥–ª—è –∑–∞–ø–∏—Å–∏
    with open(filepath, 'wb') as f:
        f.write(pretty_xml_as_string.encode('utf-8'))

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø–∏—Å–∏ –¥–∞–Ω–Ω—ã—Ö –≤ XML —Ñ–∞–π–ª
def log_user_data(user_name):
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ —Ñ–∞–π–ª—É XML (—Ä—è–¥–æ–º —Å–æ —Å–∫—Ä–∏–ø—Ç–æ–º)
    xml_file = os.path.join(os.path.dirname(__file__), "password_hide_elements_user_log.xml")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª
    if os.path.exists(xml_file):
        tree = ET.parse(xml_file)
        root = tree.getroot()
    else:
        # –ï—Å–ª–∏ —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, —Å–æ–∑–¥–∞–µ–º –∫–æ—Ä–Ω–µ–≤–æ–π —ç–ª–µ–º–µ–Ω—Ç
        root = ET.Element("UserLog")
        tree = ET.ElementTree(root)

    # –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –∑–∞–ø–∏—Å–∏
    log_entry = ET.Element("LogEntry")
    user_element = ET.SubElement(log_entry, "User")
    user_element.text = user_name
    time_element = ET.SubElement(log_entry, "Time")
    time_element.text = datetime.datetime.now().strftime("%Y-%m-%d %H:%M:%S")

    # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å –≤ –∫–æ—Ä–µ–Ω—å
    root.append(log_entry)

    # –°–æ—Ö—Ä–∞–Ω—è–µ–º XML —Å —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ–º
    write_pretty_xml(xml_file, root)


# –ö–ª–∞—Å—Å –¥–ª—è —Ñ–æ—Ä–º—ã —Å –≤–≤–æ–¥–æ–º –ø–∞—Ä–æ–ª—è
class PasswordForm(Form):
    def __init__(self, x, y):
        self.Text = '–î–µ–π—Å—Ç–≤–∏–µ –∑–∞–ø—Ä–µ—â–µ–Ω–æ!'
        self.Width = 255
        self.Height = 150
        self.StartPosition = FormStartPosition.Manual
        self.Location = System.Drawing.Point(x, y)

        self.FormBorderStyle = FormBorderStyle.FixedDialog
        self.MaximizeBox = False
        self.MinimizeBox = False

        label = Label()
        label.Text = '–í–≤–µ–¥–∏—Ç–µ –ø–∞—Ä–æ–ª—å –¥–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è:'
        label.Top = 20
        label.Left = 20
        label.Width = 260
        label.AutoSize = False
        self.Controls.Add(label)

        self.password_box = TextBox()
        self.password_box.Left = 20
        self.password_box.Top = 50
        self.password_box.Width = 200
        self.password_box.UseSystemPasswordChar = True
        self.Controls.Add(self.password_box)

        button_ok = Button()
        button_ok.Text = 'OK'
        button_ok.Left = 20
        button_ok.Top = 80
        button_ok.DialogResult = DialogResult.OK
        self.Controls.Add(button_ok)

        button_cancel = Button()
        button_cancel.Text = '–û—Ç–º–µ–Ω–∞'
        button_cancel.Top = 80
        button_cancel.Left = 145
        button_cancel.DialogResult = DialogResult.Cancel
        self.Controls.Add(button_cancel)

        self.AcceptButton = button_ok
        self.CancelButton = button_cancel

try:
    #üì¶ Variables
    sender = __eventsender__
    args = __eventargs__

    doc = revit.doc
    uidoc = revit.uidoc

    # –ü–æ–ª—É—á–∞–µ–º –∏–º—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —á–µ—Ä–µ–∑ doc.Application.Username
    current_user = doc.Application.Username

    # –°–ø–∏—Å–æ–∫ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –¥–ª—è –∫–æ—Ç–æ—Ä—ã—Ö –Ω–µ –Ω—É–∂–Ω–æ –≤–≤–æ–¥–∏—Ç—å –ø–∞—Ä–æ–ª—å
    allowed_users = ["legostaev", "chernova.a", "medvedev", "strelbitskaya","shahtarin", "sulzhenko", "VashchenkoAnton", "turusheva"]

    # –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤ —Å–ø–∏—Å–∫–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö, –æ–∫–Ω–æ —Å –ø–∞—Ä–æ–ª–µ–º –Ω–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º
    if current_user in allowed_users:
        pass  # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –≤–≤–æ–¥ –ø–∞—Ä–æ–ª—è –¥–ª—è —Ä–∞–∑—Ä–µ—à–µ–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

    else:
        # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
        selected_ids = uidoc.Selection.GetElementIds()
        selected_elements = [doc.GetElement(id) for id in selected_ids]

        # –ö–∞—Ç–µ–≥–æ—Ä–∏–∏, –ø—Ä–∏ –∫–æ—Ç–æ—Ä—ã—Ö –æ–∫–Ω–æ –Ω–µ –Ω—É–∂–Ω–æ –ø–æ–∫–∞–∑—ã–≤–∞—Ç—å
        excluded_categories = ["–û—Å–∏", "–£—Ä–æ–≤–Ω–∏","–ù–µ—Å—É—â–∞—è –∞—Ä–º–∞—Ç—É—Ä–∞","–ê—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ –ø–ª–æ—â–∞–¥–∏ –Ω–µ—Å—É—â–µ–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏","–ê—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏ –Ω–µ—Å—É—â–µ–π –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏","–§–æ—Ä–º—ã"]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ –≤—ã–±—Ä–∞–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–∞—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–∏, –æ—Ç–ª–∏—á–Ω—ã–µ –æ—Ç "–û—Å–∏" –∏ "–£—Ä–æ–≤–Ω–∏"
        show_password_prompt = False
        for element in selected_elements:
            if element.Category and element.Category.Name not in excluded_categories:
                show_password_prompt = True
                break

        # –ï—Å–ª–∏ –µ—Å—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã –¥—Ä—É–≥–∏—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ —Å –ø–∞—Ä–æ–ª–µ–º
        if show_password_prompt:
            calculated_password = generate_password()
            cursor_position = System.Windows.Forms.Cursor.Position

            form = PasswordForm(cursor_position.X - 130, cursor_position.Y - 80)
            result = form.ShowDialog()

            if result == DialogResult.Cancel:
                args.Cancel = True
            else:
                user_input = form.password_box.Text
                if user_input != calculated_password:
                    args.Cancel = True
                else:
                    # –õ–æ–≥–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—Ä–∏ —É—Å–ø–µ—à–Ω–æ–º –≤–≤–æ–¥–µ –ø–∞—Ä–æ–ª—è
                    log_user_data(current_user)

except Exception as e:
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –æ—à–∏–±–∫–æ–π –≤ –¥–∏–∞–ª–æ–≥–æ–≤–æ–º –æ–∫–Ω–µ Revit
    TaskDialog.Show("–û—à–∏–±–∫–∞", str(e))
