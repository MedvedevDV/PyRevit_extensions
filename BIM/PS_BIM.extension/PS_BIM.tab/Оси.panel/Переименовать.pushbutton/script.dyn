{
  "Uuid": "5e5ad919-bc79-4a2c-af59-bef5d92fe6c6",
  "IsCustomNode": false,
  "Description": null,
  "Name": "script",
  "ElementResolver": {
    "ResolutionMap": {
      "List": {
        "Key": "List",
        "Value": "BuiltIn.ds"
      }
    }
  },
  "Inputs": [
    {
      "Id": "50fa5ea25b684217a8d39b7a389eb315",
      "Name": "Поменять цифры с буквами?",
      "Type": "boolean",
      "Value": "false",
      "Description": "Выбор между значениями true и false.",
      "SelectedIndex": 0
    }
  ],
  "Outputs": [],
  "Nodes": [
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "1..C;",
      "Id": "8ac660782176426282ceebf271f6bee8",
      "Inputs": [
        {
          "Id": "75bd652ee29b4b9e84b5311415bc4128",
          "Name": "C",
          "Description": "C",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "71d8b981abb04da280e5c73620a4287f",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "['А','Б','В','Г','Д','Е','Ж','И','К','Л','М','Н','П','Р','С','Т','У','Ф'];\nл;",
      "Id": "3b1355656b4e41559a7434853b155b9e",
      "Inputs": [
        {
          "Id": "eef74f493268417ea193e3c896edaf1e",
          "Name": "л",
          "Description": "л",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "1dbfcffbcb4d4df7b5d2a4b439d337c7",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "94ea1177fcd1400382aeca65486ebc88",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Grid.Curve",
      "Id": "3787339b726e467086435c76b0878952",
      "Inputs": [
        {
          "Id": "d8bcddbac6a84e49847175acf405f76a",
          "Name": "grid",
          "Description": "Revit.Elements.Grid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "5ff9fbbb6f0e4ef48269ed19acc993a0",
          "Name": "Curve",
          "Description": "Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение базовой геометрии кривой от этого элемента\n\nGrid.Curve: Curve"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "3fe1d4e1643d48b7ba65911802362b06",
      "Inputs": [
        {
          "Id": "57494633be804a819ffc94502ac0025d",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "150f81ae60304b92a4f80572c77c2773",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение начальной точки вдоль кривой\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a.X;",
      "Id": "690f76a10f3642d2bdda5cbd621cecfc",
      "Inputs": [
        {
          "Id": "ae092c56daad4aeca0e96f7fce636250",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "9566f18e5c004f83b51a97b3d418fa4c",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "298049218f6e423fab36314e080d3101",
      "Inputs": [
        {
          "Id": "e25af95f20c941e4b3e696dfe551bac8",
          "Name": "list",
          "Description": "список, который требуется отсортировать\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "a5f1f7dfd5c144b1a16ba435f8a4fe06",
          "Name": "keys",
          "Description": "список ключей, ключи должны быть сортируемыми (например, числа или строки)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "c973e888ca73414ea6406748bfe964e8",
          "Name": "sortedList",
          "Description": "тип: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "1bae719e967c4426b67abee86131d49e",
          "Name": "sortedKeys",
          "Description": "тип: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Сортировка списка на основе ключей\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a.Y;",
      "Id": "01244d45a1a64a0ea8d49ea72d18a5de",
      "Inputs": [
        {
          "Id": "7b37d31bbaaf4a6f89bded38dd0fad20",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "fc2c684781854d54b46ccc268161f5bb",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Autodesk.DesignScript.Geometry.Curve.StartPoint",
      "Id": "dc77d0c710cb4051b08da837262c145b",
      "Inputs": [
        {
          "Id": "c3b83c6bf2934ad3ab51031e8f2ebd85",
          "Name": "curve",
          "Description": "Autodesk.DesignScript.Geometry.Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "91c0018ec83844779ae56a35d97b4fc8",
          "Name": "Point",
          "Description": "Point",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение начальной точки вдоль кривой\n\nCurve.StartPoint: Point"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.SortByKey@var[]..[],var[]..[]",
      "Id": "ad7b94ecd5254a4095d013fe85637b49",
      "Inputs": [
        {
          "Id": "682e10448c5f4c9abeea336c0a2ac9c5",
          "Name": "list",
          "Description": "список, который требуется отсортировать\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "0860b06b6b354881a7f98b0eef5f0d6f",
          "Name": "keys",
          "Description": "список ключей, ключи должны быть сортируемыми (например, числа или строки)\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "56208766f7fc4f63a344f7df3295c2f5",
          "Name": "sortedList",
          "Description": "тип: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "744e84044c3a46909086d56f44f5fe9b",
          "Name": "sortedKeys",
          "Description": "тип: var[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Сортировка списка на основе ключей\n\nList.SortByKey (list: var[]..[], keys: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Grid.Curve",
      "Id": "196cbec453254e36b848eb6b69fcb3a0",
      "Inputs": [
        {
          "Id": "4609d7e85d4e4236a0745964bbe3930a",
          "Name": "grid",
          "Description": "Revit.Elements.Grid",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "939205f12a6a4d7295bdee975713e0b8",
          "Name": "Curve",
          "Description": "Curve",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение базовой геометрии кривой от этого элемента\n\nGrid.Curve: Curve"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "bcd0c11cf1094a82bfdf03c74c7f9e4e",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "80c040eb6d4b46798afa88cf16d3bfc6",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "35ea4e884a574e30bf050c423f98fc60",
      "Inputs": [
        {
          "Id": "5fcba6746a4641308f4f5256fbd7fde2",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "dd29fcaa2de442c597445c5a9d1b1138",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "acebd3bbb8264758b6d73c1e8138d4b2",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a05b19f772ed4e7ebd1c639d91715294",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a+b+c+\"0\";\na+b+c;",
      "Id": "b7491088df8c4e55b86e9ec75224d62a",
      "Inputs": [
        {
          "Id": "03ab7dff8ce241d98e0d0a36a4aebc4b",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4d4ee549fadd48f9bdde3bd58876a937",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b03cdd75166040398888316354a9832d",
          "Name": "c",
          "Description": "c",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "360f9de4bcc642019e2ab6421a3424d2",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "087e9ebbec64406ba70ccf03798f9bbe",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Имя\";",
      "Id": "6d64b8670a7d480ebdfb7042f53fbd74",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "2833b28654d04a7d98a41b1300b4b5ca",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.StringInput, CoreNodeModels",
      "NodeType": "StringInputNode",
      "InputValue": "",
      "Id": "ea5d0132c3244ee5bfd08af47fc8ada4",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "e0138fe7cfdf4caeb8c31a6d66063649",
          "Name": "",
          "Description": "String",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание строки."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a+b+c;\na+b+c+\"0\";",
      "Id": "a01a38709753430983cd76b95cd7a26b",
      "Inputs": [
        {
          "Id": "69ae0340fef149f5b5e8db349976343d",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "c5d825dd029e4d7384b67e5e583592fe",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "3e69fe2e3d624801beb6accd88d496ad",
          "Name": "c",
          "Description": "c",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a77703733d8b479e8628d56a834dda7a",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "2322b714855441908460ae3e909cd2f1",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "71112148903b4e15bd2f019d10c549c1",
      "Inputs": [
        {
          "Id": "2a00d9b1bae64d6ebb4bcf2602b1ba2c",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9d31be0ff294428a8409e0dc11dd5893",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ef0847c15d4d42cd9112a3ba43ca40bd",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d0b23a246b5c406db62d4e42d8ac92ab",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "86b3b836e80d40cf95d1f596f48a1f8f",
      "Inputs": [
        {
          "Id": "a23675f36d1c43bb93cac2a6b65e1297",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "25b156df24294148a2d4f5f5c6ee1b9f",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "9c90580d5bb841f493e4359df147bc65",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "b3ad9ee682624ea28ac0d1892a4f16b8",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "\"Имя\";",
      "Id": "caa4a7b996454af6b651b6d05ba466e0",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "5a7d12df691f420395e65b442c07e5bd",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Revit.Elements.Element.SetParameterByName@string,var",
      "Id": "7065d2f84338443d803f29c53282f36f",
      "Inputs": [
        {
          "Id": "413e112f490a4a4c92ad940a1cbfcf5c",
          "Name": "element",
          "Description": "Revit.Elements.Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "307d7fe8e911415b8f86a168888d7173",
          "Name": "parameterName",
          "Description": "Имя задаваемого параметра.\n\nstring",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "13cc24398d784347b42f95515cdd315a",
          "Name": "value",
          "Description": "Значение.\n\nvar",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "ceb0daa8cc764bd89719c24b07f4c629",
          "Name": "Element",
          "Description": "Element",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Задание параметров для одного из элементов.\n\nElement.SetParameterByName (parameterName: string, value: var): Element"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "",
      "Id": "e3d4a8a3307d40b5b4ff76cc1d7b2002",
      "Inputs": [],
      "Outputs": [],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a?List.Reverse(b):b;",
      "Id": "533cea78a1814a67be2efc172d9ef744",
      "Inputs": [
        {
          "Id": "0eada6bebf0949ac9f4d9f270b09e047",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "ae05cbea2e214d82b4da27e2778aad1a",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "af9b1c544add4a2c84b3f165b92ae9a0",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a?List.Reverse(b):b;",
      "Id": "5463904beea84797b31d06c16f55129d",
      "Inputs": [
        {
          "Id": "112097011bb34f5d8bbb39a106ee66f9",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "b6a00835ab6e4f608caf0944b2ccb5f8",
          "Name": "b",
          "Description": "b",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "d58ebf3adbaa4bcc8551bcc5876fd2c9",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Count@var[]..[]",
      "Id": "9f421c19f2324f3abd252e7dd0cb1650",
      "Inputs": [
        {
          "Id": "8aeac5a3b21c42c0a3edc8bc95b9136b",
          "Name": "list",
          "Description": "Список, элементы которого требуется сосчитать.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "cd13449b7d1c415091cce6c84b010532",
          "Name": "int",
          "Description": "Длина списка.",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Получение количества элементов, хранящихся в данном списке.\n\nList.Count (list: var[]..[]): int"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "K;",
      "Id": "1b107ec679b844fbbab0e0fe1e660fb8",
      "Inputs": [
        {
          "Id": "68715b64237945fabdce9021a19a35bb",
          "Name": "K",
          "Description": "K",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dc0aa892679c4d2ab3f285ca1d21abfd",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "List.Chop(lst, List.Count(len))[0];",
      "Id": "fb95a1b4e459492093a1331da8d5d72b",
      "Inputs": [
        {
          "Id": "3c6897dd1d82493cbfc2ad7c8de5e39e",
          "Name": "lst",
          "Description": "lst",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "6484e13a61994571a152024b09c068d0",
          "Name": "len",
          "Description": "len",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "a9321b36f93b412ab62920ac334d014f",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "CoreNodeModels.Input.BoolSelector, CoreNodeModels",
      "NodeType": "BooleanInputNode",
      "InputValue": false,
      "Id": "50fa5ea25b684217a8d39b7a389eb315",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "993ddc53994d4cad9211d343fd4bd804",
          "Name": "",
          "Description": "Boolean",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выбор между значениями true и false."
    },
    {
      "ConcreteType": "CoreNodeModels.CreateList, CoreNodeModels",
      "VariableInputPorts": true,
      "NodeType": "ExtensionNode",
      "Id": "b4fd7792293e464196963076a3192747",
      "Inputs": [
        {
          "Id": "b13b7a6accf14137bd452cacb29817f3",
          "Name": "item0",
          "Description": "Индекс элемента #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "549577a09ee44266b6bd4ebac3fa93f3",
          "Name": "item1",
          "Description": "Индекс элемента #1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "3dc4e7905c574eab9b870796309945ff",
          "Name": "list",
          "Description": "Список (тип: var[]..[])",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Создание нового списка из заданных входных значений"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[0];\na[1];",
      "Id": "9fb396cf597446fe9b2601a14fe305d4",
      "Inputs": [
        {
          "Id": "ebc6876d43484b48b92526667cee0133",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "069ea8fa0eec4eecb26723281fcecb22",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "4ced6aea694f4103acae833dda08e27a",
          "Name": "",
          "Description": "Значение выражения в строке 2",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a.Name;",
      "Id": "021d559f0c9649d8b382cc39f4bd2cc8",
      "Inputs": [
        {
          "Id": "3487e360c25447caac5c407e1e099934",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "768420b1b3774d75a9361a31d3276c19",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "DSCore.List.Reverse@var[]..[]",
      "Id": "72e106732a034f5cbfd571b324e8ee2e",
      "Inputs": [
        {
          "Id": "a618134180ea44deb576ac6830def35b",
          "Name": "list",
          "Description": "Список, в котором требуется изменить направление расстановки данных.\n\nvar[]..[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "df24a8b538f04936988fa2abc7e7d96e",
          "Name": "list",
          "Description": "Обращенный список",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Создание нового списка, содержащего элементы из заданного списка, перечисленные в обратном порядке.\n\nList.Reverse (list: var[]..[]): var[]..[]"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a.Name;",
      "Id": "adcdc663b3ff47ab9bbac72d80af1a5c",
      "Inputs": [
        {
          "Id": "2ff10212d5e9455e8070ec3b9398c7d6",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "453105c037874bda8c70dabee7c713ef",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "CoreNodeModels.Logic.RefactoredIf, CoreNodeModels",
      "NodeType": "ExtensionNode",
      "Id": "7eaf016cd4a747e18653a6780391f262",
      "Inputs": [
        {
          "Id": "fada8cd8e1504af98f174cb560902830",
          "Name": "test",
          "Description": "Логическая проверка",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "64057d28e4744d10a9476237f4946b92",
          "Name": "true",
          "Description": "Возвращается, если проверка дает значение True",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "82f366b3fb0d45938f5a309ce40ddd07",
          "Name": "false",
          "Description": "Возвращается, если проверка дает значение False",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0918432485d64aa78c8d317ff792bde2",
          "Name": "result",
          "Description": "Сформированный блок результата",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Возврат результата для входных данных со значением True или False в зависимости от того, какое логическое значение использовалось в тестовых входных данных."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "#! /usr/bin/env python\r\n# -*- coding: utf-8 -*-\r\nimport sys\r\nimport clr\r\nclr.AddReference(\"System.Drawing\")\r\nclr.AddReference(\"System.Windows.Forms\")\r\n\r\nfrom System.Windows.Forms import Application, Form, FormWindowState, Screen, Label, PictureBox, PictureBoxSizeMode, \\\r\n    AnchorStyles, BorderStyle, ComboBox, ComboBoxStyle, FormBorderStyle, CheckBox, TextBox, TextBoxBase\r\nfrom System.Windows.Forms import Button, LinkLabel, Panel, Button\r\nfrom System.Drawing import Icon, Color, Font, Point, Size\r\nimport System.IO\r\n\r\n#------ Глобальные настройки формы ------#\r\nbitmapImage = System.Drawing.Bitmap(\r\n    r\"\\\\fs\\public\\Холдинг\\ПоревитД\\ТИМ\\01_Библиотека\\01_Рабочие задачи\\ALL_Основные надписи\\Логотип\\Логотип Партнер.png\")  # Логотип\r\ntitleIcon = Icon.FromHandle(bitmapImage.GetHicon())\r\ntitleText = \"Обновляем номер секции\"  # текст, который появляется в строке заголовка GUI\r\ntxtWith = 160 # ширина текстовой зоны\r\nst_height = 30 # высота с кототорой начинается ввод\r\nbtnHeight = 40  # Высота кнопки\r\nbtnWidth = 100  # Ширина кнопки\r\nbtnSpacing = 20  # Интервал между кнопками + оступ элементов от края\r\nhtSpacing = 50  # Интервал между вводам данных\r\nfontMessage = Font(\"Times New Roman \", 14)\r\nfontCK = Font(\"Times New Roman \", 12)  # настройка шрифта у Checkbox\r\nwinSize = Size(400, 350)  # размеры winform (ширина(min = 300), высота).\r\n\r\n\r\ndef button(txt, loc, clc):\r\n    btn = Button()\r\n    # btnCancel.Parent = self\r\n    btn.Text = txt\r\n    btn.Anchor = (AnchorStyles.Bottom | AnchorStyles.Right)\r\n    btn.Location = loc\r\n    btn.Click += clc\r\n    btn.Height = btnHeight\r\n    btn.Width = btnWidth\r\n    btn.BackColor = Color.FromArgb(220, 220, 220)\r\n    return btn\r\n\r\n\r\ndef logo(uiH):\r\n    logo = PictureBox()\r\n    bitmapImage = System.Drawing.Bitmap(\r\n        r\"\\\\fs\\public\\Холдинг\\ПоревитД\\ТИМ\\01_Библиотека\\01_Рабочие задачи\\ALL_Основные надписи\\Логотип\\Лого Партнер горизонтальный полный прозрачный фон.png\")\r\n    logo.Image = bitmapImage\r\n    ratio = float(logo.Height) / float(logo.Width)  # должно быть значение с плавающей точкой, так как int округляется до ближайшего целого числа\r\n    logo.Size = Size(150, 80 * ratio)  # размер логотипа\r\n    logo.Location = Point(btnSpacing, (uiH - logo.Height) - btnSpacing)\r\n    logo.SizeMode = PictureBoxSizeMode.Zoom  # масштабирование изображения\r\n    logo.Anchor = (\r\n                AnchorStyles.Bottom | AnchorStyles.Left)  # Привязка для охранения положения при масштабировании окна\r\n    return logo\r\n\r\n\r\nout = []\r\nclass WinForm(Form):\r\n    def add_Logotxt(self, uiW, value):\r\n        label_class = Label()\r\n        font = fontMessage\r\n        label_class.Text = value\r\n        label_class.Font = font\r\n        label_class.Location = Point(btnSpacing, btnSpacing)\r\n        label_class.Height = htSpacing\r\n        label_class.Width = uiW / 2\r\n        return label_class\r\n\r\n    def add_CHECKBOX(self, uiW, count=1,name=\"Пример ввода\", value=\"Пример ввода!!\"):\r\n        ch_box = CheckBox()\r\n        ch_box.Name = name\r\n        ch_box.Text = value\r\n        ch_box.Location = Point(btnSpacing, st_height + (count * htSpacing))\r\n        ch_box.Width = uiW - (btnSpacing * 2)\r\n        ch_box.Font = fontCK\r\n        ch_box.Height = 40\r\n        return ch_box\r\n\r\n    def add_txtbox(self,uiW, count=1):#(self,uiW, count=1, value=\"Пример ввода\") - если нужно в рамку добавить тест описания\r\n        # окно ввода данных\r\n        text_box = TextBox()\r\n        text_box.Width = uiW / 2 - 2*btnSpacing\r\n        #text_box.Text = value\r\n        text_box.Font = fontCK\r\n        text_box.Location = Point(htSpacing + txtWith, (st_height + htSpacing * count))\r\n        return text_box\r\n\r\n    def add_txtbox_label(self, count=1, name = \"Пример ввода\"):\r\n        # текст возле ввода данных\r\n        text_box_label = Label()\r\n        text_box_label.Text = name\r\n        text_box_label.Width = txtWith\r\n        text_box_label.Font = fontCK\r\n        text_box_label.Location = Point(btnSpacing, (st_height + htSpacing * count))\r\n        text_box_label.Height = 50\r\n        return text_box_label\r\n\r\n    def okButton_pressed(self, sender, args):\r\n        chBox_checks = []\r\n        numErrorProvider = System.Windows.Forms.ErrorProvider()\r\n        try:\r\n            for lst_txtBox in self.lst_txtBoxses:\r\n                out.append(lst_txtBox.Text)\r\n\r\n            for i in range(len(self.lst_checkbox_index)):\r\n                out.append((self.lst_checkbox_index)[i].Checked)\r\n            self.Close()  # Тригер для закрытия окна\r\n        except ValueError:\r\n            numErrorProvider.SetError(sender, 'Must be a number')\r\n\r\n    def __init__(self):\r\n        #------ Настройка окна ------#\r\n        self.CenterToScreen()  # открывать по центру экрана\r\n        self.BringToFront()  # Выводить на предний план\r\n        self.Icon = titleIcon\r\n        self.Size = winSize\r\n        uiWidth = self.DisplayRectangle.Width  # ширина формы для использования в классе\r\n        uiHeight = self.DisplayRectangle.Height # высота формы для использования в классе\r\n        stHeight = uiHeight / 10  # высота с которой будут начинаться поля ввода\r\n        htSpacing = 50  # расстояни между полями ввода\r\n        # self.FormBorderStyle = FormBorderStyle.FixedDialog  # fixed dialog stops the user from adjusting the form size. Recomended disabling this when testing to see if elements are in the wrong place.#\r\n        self.Topmost = True # Отобрадение окна поверх других окон\r\n        self.BackColor = Color.FromArgb(242, 242, 242)\r\n\r\n        self.Controls.Add(logo(uiHeight))\r\n\r\n        self.Text = titleText # Текст заголовка\r\n\r\n        # Настройка текста в форме(можно добавить к кажой кнопке, но это гемор)\r\n\r\n        self.Controls.Add(self.add_Logotxt(uiWidth,\r\n                                      \"Заполнить значения\")\r\n                          )\r\n        #----- добавить ввод данных с клавиатуры -----#\r\n        # Чекбокс\r\n        self.cg0 = self.add_CHECKBOX(uiWidth, 2, \"П\", \"Развернуть порядок\")\r\n        self.cg1 = self.add_CHECKBOX(uiWidth, 3 , \"п2\", \"Поменять буквы с цифрами\")\r\n        self.lst_checkbox_index = [self.cg0,self.cg1]\r\n        self.Controls.Add(self.cg0)\r\n        self.Controls.Add(self.cg1)\r\n        #Добавляем текстовый логотип ввода\r\n        self.Controls.Add(self.add_txtbox_label(1, \"Постфикс\"))\r\n        #Добавляем поле ввода\r\n        self.txtBox_numb = self.add_txtbox(uiWidth, 1)\r\n        self.lst_txtBoxses = [self.txtBox_numb] # формируем список из полей вставки (нужно для вывода)\r\n        self.Controls.Add(self.txtBox_numb)\r\n\r\n        # ----- добавить кнопку -----#\r\n        btnOkClick = self.okButton_pressed  # Регистрация нажатия\r\n        # Ниже одна кнопка. Для расчета нужно btnWidth * кол-во кнопок\r\n        btnOkLoc = Point(uiWidth - ((btnWidth) + btnSpacing), uiHeight - (btnHeight + btnSpacing)) #Расчет положения.\r\n        btnOk = button('OK', btnOkLoc, btnOkClick)\r\n        self.Controls.Add(btnOk)\r\n\r\n\r\nform = WinForm()\r\nApplication.Run(form)\r\n\r\n\r\nOUT = out# print заменить на out\r\n",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "4cfb167eb8814add8022aac3afdf92a2",
      "Inputs": [],
      "Outputs": [
        {
          "Id": "d93d27d2c10e4add8e088bc49a916821",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария Python."
    },
    {
      "ConcreteType": "PythonNodeModels.PythonNode, PythonNodeModels",
      "NodeType": "PythonScriptNode",
      "Code": "import clr\r\nclr.AddReference('RevitAPI')\r\nimport Autodesk\r\nclr.AddReference(\"RevitAPIUI\")\r\nfrom Autodesk.Revit.DB import *\r\nfrom Autodesk.Revit.Creation import Document as docc\r\nfrom Autodesk.Revit.DB import Dimension, Transaction, XYZ, BuiltInCategory\r\nfrom Autodesk.Revit.DB import Reference, IndependentTag, Transform, Line\r\nfrom Autodesk.Revit.DB import IntersectionResultArray, Plane\r\nfrom Autodesk.Revit.DB import ClosestPointsPairBetweenTwoCurves\r\n\r\nfrom Autodesk.Revit.DB import Category, BuiltInCategory\r\nfrom Autodesk.Revit.UI.Selection import ObjectType, ISelectionFilter\r\nfrom Autodesk.Revit.Exceptions import OperationCanceledException\r\nimport math\r\n\r\nclr.AddReference('ProtoGeometry')\r\nfrom Autodesk.DesignScript.Geometry import *\r\n\r\nfrom operator import itemgetter, attrgetter\r\n\r\n\r\nclr.AddReference('System')\r\nimport System\r\nfrom System.Collections.Generic import List\r\n\r\nclr.AddReference(\"RevitNodes\")\r\nimport Revit\r\nclr.ImportExtensions(Revit.Elements)\r\nclr.ImportExtensions(Revit.GeometryConversion)\r\nclr.ImportExtensions(Revit.GeometryReferences)\r\n\r\nclr.AddReference(\"RevitServices\")\r\nimport RevitServices\r\nfrom RevitServices.Persistence import DocumentManager\r\nfrom RevitServices.Transactions import TransactionManager\r\n\r\ndoc = DocumentManager.Instance.CurrentDBDocument\r\nuidoc=DocumentManager.Instance.CurrentUIApplication.ActiveUIDocument\r\nuiapp=DocumentManager.Instance.CurrentUIApplication\r\napp = uiapp.Application\r\n\r\nview = doc.ActiveView\r\ndataEnteringNode = IN\r\n\r\nclass Get_revit_elements:\r\n    \"\"\"Класс для поиска элементов в Revit.\"\"\"\r\n\r\n    @classmethod\r\n    def get_elems_by_category(cls, category_class, active_view=None, name=None):\r\n        \"\"\"Получение элемента по классу категории.\"\"\"\r\n        if not active_view:\r\n            els = FilteredElementCollector(doc).OfClass(category_class).\\\r\n                  ToElements()\r\n        else:\r\n            els = FilteredElementCollector(doc, active_view).\\\r\n                  OfClass(category_class).ToElements()\r\n        if name:\r\n            els = [i for i in els if name in i.Name] \r\n        return els\r\n\r\n    @classmethod\r\n    def get_elems_by_builtinCategory(cls, built_in_cat=None, include=[],\r\n                                     active_view=None):\r\n        \"\"\"Получение элемента по встроенному классу.\"\"\"\r\n        if not include:\r\n            if not active_view:\r\n                els = FilteredElementCollector(doc).OfCategory(built_in_cat)\r\n            else:\r\n                els = FilteredElementCollector(doc, active_view).\\\r\n                      OfCategory(built_in_cat)\r\n            return els.ToElements()\r\n        if include:\r\n            new_list = []\r\n            for i in include:\r\n                if not active_view:\r\n                    els = FilteredElementCollector(doc).OfCategory(built_in_cat)\r\n                else:\r\n                    els = FilteredElementCollector(doc, active_view).\\\r\n                          OfCategory(built_in_cat)\r\n                new_list += els.ToElements()\r\n            return new_list\r\n\r\nclass Pick_by_category(ISelectionFilter):\r\n    doc = uidoc.Document\r\n    def __init__(self, built_in_category):\r\n        if isinstance(built_in_category, Category):\r\n            self.built_in_category = [built_in_category.Id]\r\n        else:\r\n            if isinstance(built_in_category, BuiltInCategory):\r\n                built_in_category = [built_in_category]\r\n            self.built_in_category = [Category.GetCategory(self.doc, i).Id for i in built_in_category]\r\n\r\n    def AllowElement(self, el):\r\n        if el.Category.Id in self.built_in_category:\r\n            return True\r\n        return False\r\n\r\n    def AllowReference(self, refer, xyz):\r\n        return False\r\n\r\nclass Pick_by_class(ISelectionFilter):\r\n    doc = uidoc.Document\r\n    def __init__(self, class_type):\r\n        self.class_type = class_type\r\n\r\n    def AllowElement(self, el):\r\n        if isinstance(el, self.class_type):\r\n            return True\r\n        return False\r\n\r\n    def AllowReference(self, refer, xyz):\r\n        return False\r\n\r\n\r\nclass Selections:\r\n    \"\"\"Класс с реализацией различных методов выбора элементов.\"\"\"\r\n\r\n    selection = uidoc.Selection\r\n    doc = uidoc.Document\r\n    @classmethod\r\n    def pick_element_by_category(cls, built_in_category):\r\n        \"\"\"Выбор одного элемента по BuiltInCategory.\"\"\"\r\n        try:\r\n            return cls.doc.GetElement(cls.selection.PickObject(ObjectType.Element, Pick_by_category(built_in_category)))\r\n        except OperationCanceledException:\r\n            return\r\n        \r\n    \r\n    @classmethod\r\n    def pick_elements_by_category(cls, built_in_category):\r\n        \"\"\"Выбор нескольких элементов по категории.\"\"\"\r\n        try:\r\n            return [cls.doc.GetElement(i) for i in cls.selection.PickObjects(ObjectType.Element, Pick_by_category(built_in_category))]\r\n        except OperationCanceledException:\r\n            return\r\n\t        \r\n    @classmethod\r\n    def pick_element_by_class(cls, class_type):\r\n        \"\"\"Выбор одного элемента по категории.\"\"\"\r\n        try:\r\n            return cls.doc.GetElement(cls.selection.PickObject(ObjectType.Element, Pick_by_class(class_type)))\r\n        except OperationCanceledException:\r\n            return\r\n\r\n    @classmethod\r\n    def pick_elements_by_class(cls, class_type):\r\n        \"\"\"Выбор нескольких элементов  по категории.\"\"\"\r\n        try:\r\n            return [cls.doc.GetElement(i) for i in cls.selection.PickObjects(ObjectType.Element, Pick_by_class(class_type))]\r\n        except OperationCanceledException:\r\n            return\r\n            \r\nOUT = Selections.pick_elements_by_category(BuiltInCategory.OST_Grids)\r\n   ",
      "Engine": "IronPython2",
      "VariableInputPorts": true,
      "Id": "f6fae04b8c994c998b61828dfc99289d",
      "Inputs": [
        {
          "Id": "2fee79d466194c848cf088bc61ea9a6f",
          "Name": "IN[0]",
          "Description": "Input #0",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "0d4130936e91476aa14d3964cf5a5bd9",
          "Name": "OUT",
          "Description": "Результат сценария Python",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Выполнение встроенного сценария Python."
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "Разворот = a[1];",
      "Id": "eb76abf52822467082f131a6b25bdf29",
      "Inputs": [
        {
          "Id": "6fcd937d9b3c402db9ce9206f78e92d4",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "41b60bc333cd4f6a955d3d448deb1722",
          "Name": "",
          "Description": "Разворот",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.CodeBlockNodeModel, DynamoCore",
      "NodeType": "CodeBlockNode",
      "Code": "a[0];",
      "Id": "e5c8eb41c4164672809444003a83b30f",
      "Inputs": [
        {
          "Id": "651366f65e094224914b31a6ff766af4",
          "Name": "a",
          "Description": "a",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "dac5032f22384d3693710ed30f791da4",
          "Name": "",
          "Description": "Значение выражения в строке 1",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Disabled",
      "Description": "Обеспечивает возможность непосредственного авторства кода DesignScript"
    },
    {
      "ConcreteType": "Dynamo.Graph.Nodes.ZeroTouch.DSFunction, DynamoCore",
      "NodeType": "FunctionNode",
      "FunctionSignature": "Prorubim.GridsRenumbering.Grids.DivideByOrientation@Revit.Elements.Grid[]",
      "Id": "299b1530f5d04bacb93a507632d91670",
      "Inputs": [
        {
          "Id": "7c17eaaeabf045c59ae00501137ae58a",
          "Name": "grids",
          "Description": "Grids set for dividing\n\nGrid[]",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Outputs": [
        {
          "Id": "85e49f26834a40dd96dc9871718c4da4",
          "Name": "hGrids",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        },
        {
          "Id": "90d76000a86148c489c0ed523d2873b4",
          "Name": "vGrids",
          "Description": "var",
          "UsingDefaultValue": false,
          "Level": 2,
          "UseLevels": false,
          "KeepListStructure": false
        }
      ],
      "Replication": "Auto",
      "Description": "Divides and sorts grid lines set by orientation on horizontal and vertical grid lines. Lines orientation is defined as line direction priority. It`s not straight vector.\n\nGrids.DivideByOrientation (grids: Grid[]): var[]..[]"
    }
  ],
  "Connectors": [
    {
      "Start": "71d8b981abb04da280e5c73620a4287f",
      "End": "4d4ee549fadd48f9bdde3bd58876a937",
      "Id": "08456f55ac324aadb29cdf5cc0d94b21"
    },
    {
      "Start": "1dbfcffbcb4d4df7b5d2a4b439d337c7",
      "End": "3c6897dd1d82493cbfc2ad7c8de5e39e",
      "Id": "192e1a802000417190be88710c52ed7c"
    },
    {
      "Start": "94ea1177fcd1400382aeca65486ebc88",
      "End": "0eada6bebf0949ac9f4d9f270b09e047",
      "Id": "80753e83dbdf42529b3fbc32b24e22c4"
    },
    {
      "Start": "5ff9fbbb6f0e4ef48269ed19acc993a0",
      "End": "57494633be804a819ffc94502ac0025d",
      "Id": "7ed545145db6489eaafce2f254288bf2"
    },
    {
      "Start": "150f81ae60304b92a4f80572c77c2773",
      "End": "ae092c56daad4aeca0e96f7fce636250",
      "Id": "71bea3aaf730427da32ca0f8a1160090"
    },
    {
      "Start": "9566f18e5c004f83b51a97b3d418fa4c",
      "End": "a5f1f7dfd5c144b1a16ba435f8a4fe06",
      "Id": "dcaad1cdbb4b4032a53d6443a020422e"
    },
    {
      "Start": "c973e888ca73414ea6406748bfe964e8",
      "End": "a23675f36d1c43bb93cac2a6b65e1297",
      "Id": "0e5659676fa7485fadc02c7576b6614d"
    },
    {
      "Start": "fc2c684781854d54b46ccc268161f5bb",
      "End": "0860b06b6b354881a7f98b0eef5f0d6f",
      "Id": "df84d61dc6ec40e5a1cc555eb2876a44"
    },
    {
      "Start": "91c0018ec83844779ae56a35d97b4fc8",
      "End": "7b37d31bbaaf4a6f89bded38dd0fad20",
      "Id": "28b73e86861b4138ba0e345992177486"
    },
    {
      "Start": "56208766f7fc4f63a344f7df3295c2f5",
      "End": "413e112f490a4a4c92ad940a1cbfcf5c",
      "Id": "e9056c3d8f7c443083cd29b06c88a262"
    },
    {
      "Start": "939205f12a6a4d7295bdee975713e0b8",
      "End": "c3b83c6bf2934ad3ab51031e8f2ebd85",
      "Id": "e89a9a93ed524e4ba1715a0d02813a53"
    },
    {
      "Start": "80c040eb6d4b46798afa88cf16d3bfc6",
      "End": "03ab7dff8ce241d98e0d0a36a4aebc4b",
      "Id": "af852ea082be463396f1cc7781c0d074"
    },
    {
      "Start": "360f9de4bcc642019e2ab6421a3424d2",
      "End": "9c90580d5bb841f493e4359df147bc65",
      "Id": "67355952dc5848b18e95f3cc76ff44a6"
    },
    {
      "Start": "087e9ebbec64406ba70ccf03798f9bbe",
      "End": "b6a00835ab6e4f608caf0944b2ccb5f8",
      "Id": "cee9c77f3e4345d49f952ff6fde364a9"
    },
    {
      "Start": "2833b28654d04a7d98a41b1300b4b5ca",
      "End": "dd29fcaa2de442c597445c5a9d1b1138",
      "Id": "43d46e98a49f4ef1907c7bf7adc5768c"
    },
    {
      "Start": "2833b28654d04a7d98a41b1300b4b5ca",
      "End": "9d31be0ff294428a8409e0dc11dd5893",
      "Id": "b1cf7f93399f46d984ef0bec092775b7"
    },
    {
      "Start": "e0138fe7cfdf4caeb8c31a6d66063649",
      "End": "69ae0340fef149f5b5e8db349976343d",
      "Id": "ecf65bade7b74f58a310af74fe7e044c"
    },
    {
      "Start": "a77703733d8b479e8628d56a834dda7a",
      "End": "ae05cbea2e214d82b4da27e2778aad1a",
      "Id": "12bd26e00b7b422e83093c95522aaa25"
    },
    {
      "Start": "2322b714855441908460ae3e909cd2f1",
      "End": "13cc24398d784347b42f95515cdd315a",
      "Id": "5e7adc49200542309ae48975f45831d5"
    },
    {
      "Start": "b3ad9ee682624ea28ac0d1892a4f16b8",
      "End": "5fcba6746a4641308f4f5256fbd7fde2",
      "Id": "499f1bd0b9bc4ecb8de224a56157dd4c"
    },
    {
      "Start": "5a7d12df691f420395e65b442c07e5bd",
      "End": "25b156df24294148a2d4f5f5c6ee1b9f",
      "Id": "2033cdde51114146a9360bd11573cdb6"
    },
    {
      "Start": "5a7d12df691f420395e65b442c07e5bd",
      "End": "307d7fe8e911415b8f86a168888d7173",
      "Id": "384472cafdee4b8ebace4343e69e5844"
    },
    {
      "Start": "ceb0daa8cc764bd89719c24b07f4c629",
      "End": "2a00d9b1bae64d6ebb4bcf2602b1ba2c",
      "Id": "911a271be5cf4bdfa10445941c745afc"
    },
    {
      "Start": "af9b1c544add4a2c84b3f165b92ae9a0",
      "End": "ef0847c15d4d42cd9112a3ba43ca40bd",
      "Id": "b98c8af352d0492b85f2dc61252f173e"
    },
    {
      "Start": "d58ebf3adbaa4bcc8551bcc5876fd2c9",
      "End": "acebd3bbb8264758b6d73c1e8138d4b2",
      "Id": "63216e0d481c4109bc1116baf7d2a35b"
    },
    {
      "Start": "cd13449b7d1c415091cce6c84b010532",
      "End": "75bd652ee29b4b9e84b5311415bc4128",
      "Id": "4c05e9732f164771bfbb2a8e034f7419"
    },
    {
      "Start": "dc0aa892679c4d2ab3f285ca1d21abfd",
      "End": "112097011bb34f5d8bbb39a106ee66f9",
      "Id": "6dad427917774f65bc443ff12ff503fc"
    },
    {
      "Start": "a9321b36f93b412ab62920ac334d014f",
      "End": "c5d825dd029e4d7384b67e5e583592fe",
      "Id": "314a899d20b94ce982f04683acac74b0"
    },
    {
      "Start": "993ddc53994d4cad9211d343fd4bd804",
      "End": "fada8cd8e1504af98f174cb560902830",
      "Id": "7d8309a958c64d009cb344b1321ed1a1"
    },
    {
      "Start": "3dc4e7905c574eab9b870796309945ff",
      "End": "3487e360c25447caac5c407e1e099934",
      "Id": "8b1822230d1441a5a25c1a02c13f71e0"
    },
    {
      "Start": "3dc4e7905c574eab9b870796309945ff",
      "End": "a618134180ea44deb576ac6830def35b",
      "Id": "a88183dd9110450b86d31ed466f39d17"
    },
    {
      "Start": "3dc4e7905c574eab9b870796309945ff",
      "End": "82f366b3fb0d45938f5a309ce40ddd07",
      "Id": "93c7155f6ad141a9813a2dbc84d7e6d1"
    },
    {
      "Start": "069ea8fa0eec4eecb26723281fcecb22",
      "End": "4609d7e85d4e4236a0745964bbe3930a",
      "Id": "a255f035074a4e0998b368431fdd31a9"
    },
    {
      "Start": "069ea8fa0eec4eecb26723281fcecb22",
      "End": "682e10448c5f4c9abeea336c0a2ac9c5",
      "Id": "fa89da73f547493694a9707944297a7d"
    },
    {
      "Start": "069ea8fa0eec4eecb26723281fcecb22",
      "End": "6484e13a61994571a152024b09c068d0",
      "Id": "20821defda344f66ad148e7ee999f55d"
    },
    {
      "Start": "4ced6aea694f4103acae833dda08e27a",
      "End": "d8bcddbac6a84e49847175acf405f76a",
      "Id": "c9396e515fbc4beeaac869a4cb51441b"
    },
    {
      "Start": "4ced6aea694f4103acae833dda08e27a",
      "End": "e25af95f20c941e4b3e696dfe551bac8",
      "Id": "bafec949ce6142778edaa99d3e93d4f7"
    },
    {
      "Start": "4ced6aea694f4103acae833dda08e27a",
      "End": "8aeac5a3b21c42c0a3edc8bc95b9136b",
      "Id": "6c8581540886489ba2147237e647660f"
    },
    {
      "Start": "df24a8b538f04936988fa2abc7e7d96e",
      "End": "2ff10212d5e9455e8070ec3b9398c7d6",
      "Id": "fe90d9efe4854b3e9ea5c855a652ac4f"
    },
    {
      "Start": "df24a8b538f04936988fa2abc7e7d96e",
      "End": "64057d28e4744d10a9476237f4946b92",
      "Id": "49089ee794d64f5cb606599d0f0a3b80"
    },
    {
      "Start": "0918432485d64aa78c8d317ff792bde2",
      "End": "ebc6876d43484b48b92526667cee0133",
      "Id": "8fdbd69cd3bb4a30863051ee61df9bc2"
    },
    {
      "Start": "d93d27d2c10e4add8e088bc49a916821",
      "End": "2fee79d466194c848cf088bc61ea9a6f",
      "Id": "602a6ee6606c4ad39609ddeabc9bf6bd"
    },
    {
      "Start": "d93d27d2c10e4add8e088bc49a916821",
      "End": "6fcd937d9b3c402db9ce9206f78e92d4",
      "Id": "f44b685f758745568dd6f03576686849"
    },
    {
      "Start": "d93d27d2c10e4add8e088bc49a916821",
      "End": "651366f65e094224914b31a6ff766af4",
      "Id": "c6e1adb4753140d9b300092dacd68780"
    },
    {
      "Start": "0d4130936e91476aa14d3964cf5a5bd9",
      "End": "7c17eaaeabf045c59ae00501137ae58a",
      "Id": "a7e08334133243d8b98326ef42859188"
    },
    {
      "Start": "41b60bc333cd4f6a955d3d448deb1722",
      "End": "68715b64237945fabdce9021a19a35bb",
      "Id": "5b06608c62004640ae1d91cf6129a099"
    },
    {
      "Start": "41b60bc333cd4f6a955d3d448deb1722",
      "End": "eef74f493268417ea193e3c896edaf1e",
      "Id": "e550a7b358e74aeabfd651ce07257b68"
    },
    {
      "Start": "dac5032f22384d3693710ed30f791da4",
      "End": "3e69fe2e3d624801beb6accd88d496ad",
      "Id": "80a652cf676242a1aec21c1561696d3e"
    },
    {
      "Start": "dac5032f22384d3693710ed30f791da4",
      "End": "b03cdd75166040398888316354a9832d",
      "Id": "cc116d8a5c354a5c97fb8e5af4cc7059"
    },
    {
      "Start": "85e49f26834a40dd96dc9871718c4da4",
      "End": "b13b7a6accf14137bd452cacb29817f3",
      "Id": "7f8bd90dde7c48ddbda2d99894bc2c39"
    },
    {
      "Start": "90d76000a86148c489c0ed523d2873b4",
      "End": "549577a09ee44266b6bd4ebac3fa93f3",
      "Id": "62304263d11446488b5c77191506a291"
    }
  ],
  "Dependencies": [],
  "NodeLibraryDependencies": [
    {
      "Name": "Prorubim Grids Renumbering",
      "Version": "1.0.1",
      "ReferenceType": "Package",
      "Nodes": [
        "299b1530f5d04bacb93a507632d91670"
      ]
    }
  ],
  "Thumbnail": "",
  "GraphDocumentationURL": null,
  "ExtensionWorkspaceData": [
    {
      "ExtensionGuid": "28992e1d-abb9-417f-8b1b-05e053bee670",
      "Name": "Properties",
      "Version": "2.12",
      "Data": {}
    },
    {
      "ExtensionGuid": "DFBD9CC0-DB40-457A-939E-8C8555555A9D",
      "Name": "Generative Design",
      "Version": "1.10",
      "Data": {}
    }
  ],
  "Author": "None provided",
  "Linting": {
    "activeLinter": "Нет",
    "activeLinterId": "7b75fb44-43fd-4631-a878-29f4d5d8399a",
    "warningCount": 0,
    "errorCount": 0
  },
  "Bindings": [],
  "View": {
    "Dynamo": {
      "ScaleFactor": 1.0,
      "HasRunWithoutCrash": true,
      "IsVisibleInDynamoLibrary": true,
      "Version": "2.12.1.8246",
      "RunType": "Manual",
      "RunPeriod": "1000"
    },
    "Camera": {
      "Name": "Фоновый просмотр",
      "EyeX": 15860.802997570685,
      "EyeY": 48096.556229989736,
      "EyeZ": -2047.1749480796789,
      "LookX": 3415.3777525924561,
      "LookY": -51199.780525646507,
      "LookZ": -20003.129319069198,
      "UpX": 0.13953240092594354,
      "UpY": 0.55919290347074968,
      "UpZ": -0.81721111458411
    },
    "NodeViews": [
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "8ac660782176426282ceebf271f6bee8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 748.26972541824239,
        "Y": 735.51974642625851
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "3b1355656b4e41559a7434853b155b9e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 21.158787940346087,
        "Y": -345.2069418199647
      },
      {
        "ShowGeometry": false,
        "Name": "Grid.Curve",
        "Id": "3787339b726e467086435c76b0878952",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 589.04496137248282,
        "Y": 405.40300952462809
      },
      {
        "ShowGeometry": false,
        "Name": "Curve.StartPoint",
        "Id": "3fe1d4e1643d48b7ba65911802362b06",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 588.77894267267106,
        "Y": 488.655907853742
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "690f76a10f3642d2bdda5cbd621cecfc",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 664.15123013413518,
        "Y": 567.90607519284754
      },
      {
        "ShowGeometry": true,
        "Name": "List.SortByKey",
        "Id": "298049218f6e423fab36314e080d3101",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 879.50262667590846,
        "Y": 372.253452926125
      },
      {
        "ShowGeometry": false,
        "Name": "Code Block",
        "Id": "01244d45a1a64a0ea8d49ea72d18a5de",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 675.08081342880666,
        "Y": 145.45815707422389
      },
      {
        "ShowGeometry": false,
        "Name": "Curve.StartPoint",
        "Id": "dc77d0c710cb4051b08da837262c145b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 591.5550139137606,
        "Y": 62.2429582558114
      },
      {
        "ShowGeometry": true,
        "Name": "List.SortByKey",
        "Id": "ad7b94ecd5254a4095d013fe85637b49",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 916.55250919015225,
        "Y": 50.268051279697346
      },
      {
        "ShowGeometry": false,
        "Name": "Grid.Curve",
        "Id": "196cbec453254e36b848eb6b69fcb3a0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 595.731388962339,
        "Y": -24.836247101045331
      },
      {
        "ShowGeometry": true,
        "Name": "Префикс осей по X",
        "Id": "bcd0c11cf1094a82bfdf03c74c7f9e4e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 705.52640295126571,
        "Y": 834.25632614941037
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "35ea4e884a574e30bf050c423f98fc60",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2149.7514465484364,
        "Y": 282.80188988210216
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "b7491088df8c4e55b86e9ec75224d62a",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 976.05788993405645,
        "Y": 775.5546974510986
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "6d64b8670a7d480ebdfb7042f53fbd74",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1995.2318085459676,
        "Y": 220.528809489605
      },
      {
        "ShowGeometry": true,
        "Name": "Префикс осей по Y",
        "Id": "ea5d0132c3244ee5bfd08af47fc8ada4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 786.59820265926851,
        "Y": -252.62347057313031
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "a01a38709753430983cd76b95cd7a26b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1015.2096770783644,
        "Y": -230.95094978599127
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "71112148903b4e15bd2f019d10c549c1",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 2149.3668624667034,
        "Y": 115.75995914815894
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "86b3b836e80d40cf95d1f596f48a1f8f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1516.5120258668194,
        "Y": 283.96787440966341
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "caa4a7b996454af6b651b6d05ba466e0",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1361.9923878643492,
        "Y": 221.69479401716643
      },
      {
        "ShowGeometry": true,
        "Name": "Element.SetParameterByName",
        "Id": "7065d2f84338443d803f29c53282f36f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1516.1274417850791,
        "Y": 116.92594367572042
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e3d4a8a3307d40b5b4ff76cc1d7b2002",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1799.1550777992832,
        "Y": -122.3472397635594
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "533cea78a1814a67be2efc172d9ef744",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1287.5175222182656,
        "Y": -310.97606955030562
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "5463904beea84797b31d06c16f55129d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 1248.0548326333521,
        "Y": 966.70012457622374
      },
      {
        "ShowGeometry": true,
        "Name": "List.Count",
        "Id": "9f421c19f2324f3abd252e7dd0cb1650",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 511.87495133664038,
        "Y": 714.60530289930512
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "1b107ec679b844fbbab0e0fe1e660fb8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 539.35230049178517,
        "Y": 955.90012609130758
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "fb95a1b4e459492093a1331da8d5d72b",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 286.80115646175591,
        "Y": -216.95931562793857
      },
      {
        "ShowGeometry": true,
        "Name": "Поменять цифры с буквами?",
        "Id": "50fa5ea25b684217a8d39b7a389eb315",
        "IsSetAsInput": true,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -816.616379123478,
        "Y": 361.28003106090478
      },
      {
        "ShowGeometry": true,
        "Name": "List Create",
        "Id": "b4fd7792293e464196963076a3192747",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -525.78623303269524,
        "Y": 190.88512570451115
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "9fb396cf597446fe9b2601a14fe305d4",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": 249.84740359254192,
        "Y": 252.6037747780972
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "021d559f0c9649d8b382cc39f4bd2cc8",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -244.89773937063251,
        "Y": -156.78113294873867
      },
      {
        "ShowGeometry": true,
        "Name": "List.Reverse",
        "Id": "72e106732a034f5cbfd571b324e8ee2e",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -472.28081523104356,
        "Y": 313.8423377575956
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "adcdc663b3ff47ab9bbac72d80af1a5c",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -268.48337382940929,
        "Y": 515.56988173434377
      },
      {
        "ShowGeometry": true,
        "Name": "If",
        "Id": "7eaf016cd4a747e18653a6780391f262",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -76.997615338701962,
        "Y": 243.09645281207315
      },
      {
        "ShowGeometry": true,
        "Name": "Python Script",
        "Id": "4cfb167eb8814add8022aac3afdf92a2",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1363.9066604805041,
        "Y": -19.9863289709088
      },
      {
        "ShowGeometry": true,
        "Name": "Выбор помещений",
        "Id": "f6fae04b8c994c998b61828dfc99289d",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -1034.7532461855026,
        "Y": 173.99515617382855
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "eb76abf52822467082f131a6b25bdf29",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -774.83657623381418,
        "Y": 42.163423766185758
      },
      {
        "ShowGeometry": true,
        "Name": "Code Block",
        "Id": "e5c8eb41c4164672809444003a83b30f",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -853.0,
        "Y": -118.0
      },
      {
        "ShowGeometry": true,
        "Name": "Grids.DivideByOrientation",
        "Id": "299b1530f5d04bacb93a507632d91670",
        "IsSetAsInput": false,
        "IsSetAsOutput": false,
        "Excluded": false,
        "X": -782.2712557177033,
        "Y": 191.03657986852818
      }
    ],
    "Annotations": [
      {
        "Id": "2722801a0d524e8f97484c904b002691",
        "Title": "Оси по оси Х",
        "Nodes": [
          "3787339b726e467086435c76b0878952",
          "3fe1d4e1643d48b7ba65911802362b06",
          "690f76a10f3642d2bdda5cbd621cecfc",
          "298049218f6e423fab36314e080d3101"
        ],
        "Left": 578.77894267267106,
        "Top": 342.253452926125,
        "Width": 523.72368400323739,
        "Height": 318.65262226672252,
        "FontSize": 14.0,
        "InitialTop": 372.253452926125,
        "InitialHeight": 340.65262226672252,
        "TextblockHeight": 20.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "8b038f764dc244c9a8e30cd904184c39",
        "Title": "Оси по оси Y",
        "Nodes": [
          "01244d45a1a64a0ea8d49ea72d18a5de",
          "dc77d0c710cb4051b08da837262c145b",
          "ad7b94ecd5254a4095d013fe85637b49",
          "196cbec453254e36b848eb6b69fcb3a0"
        ],
        "Left": 581.5550139137606,
        "Top": -54.836247101045331,
        "Width": 557.99749527639165,
        "Height": 293.29440417526922,
        "FontSize": 14.0,
        "InitialTop": -24.836247101045331,
        "InitialHeight": 315.29440417526922,
        "TextblockHeight": 20.0,
        "Background": "#FFB9F9E1"
      },
      {
        "Id": "1e5aecfda05d488cbd8c314197781cf3",
        "Title": "Создание списка имен",
        "Nodes": [
          "3b1355656b4e41559a7434853b155b9e",
          "ea5d0132c3244ee5bfd08af47fc8ada4",
          "a01a38709753430983cd76b95cd7a26b"
        ],
        "Left": 11.158787940346087,
        "Top": -375.2069418199647,
        "Width": 1167.0508891380182,
        "Height": 265.25599203397343,
        "FontSize": 14.0,
        "InitialTop": -345.2069418199647,
        "InitialHeight": 259.25599203397343,
        "TextblockHeight": 20.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "356cc76200774c5c887fc605159ba25f",
        "Title": "Создание списка имен",
        "Nodes": [
          "8ac660782176426282ceebf271f6bee8",
          "bcd0c11cf1094a82bfdf03c74c7f9e4e",
          "b7491088df8c4e55b86e9ec75224d62a"
        ],
        "Left": 695.52640295126571,
        "Top": 705.51974642625851,
        "Width": 443.53148698279074,
        "Height": 196.73657972315186,
        "FontSize": 14.0,
        "InitialTop": 735.51974642625851,
        "InitialHeight": 243.73657972315186,
        "TextblockHeight": 20.0,
        "Background": "#FFC1D676"
      },
      {
        "Id": "1faaa8c25a2a445b9c3739883ac83805",
        "Title": "Запись имен ",
        "Nodes": [
          "35ea4e884a574e30bf050c423f98fc60",
          "6d64b8670a7d480ebdfb7042f53fbd74",
          "71112148903b4e15bd2f019d10c549c1"
        ],
        "Left": 1985.2318085459676,
        "Top": 62.759959148158941,
        "Width": 444.51963800246881,
        "Height": 365.04193073394322,
        "FontSize": 36.0,
        "InitialTop": 115.75995914815894,
        "InitialHeight": 312.04193073394322,
        "TextblockHeight": 43.0,
        "Background": "#FFFFC999"
      },
      {
        "Id": "63aebd7723d2495c839ca8856379d266",
        "Title": "Подмена имен ",
        "Nodes": [
          "86b3b836e80d40cf95d1f596f48a1f8f",
          "caa4a7b996454af6b651b6d05ba466e0",
          "7065d2f84338443d803f29c53282f36f"
        ],
        "Left": 1351.9923878643492,
        "Top": 63.925943675720418,
        "Width": 444.51963800247017,
        "Height": 365.041930733943,
        "FontSize": 36.0,
        "InitialTop": 116.92594367572042,
        "InitialHeight": 312.041930733943,
        "TextblockHeight": 43.0,
        "Background": "#FFFFC999"
      }
    ],
    "X": 3278.3462116030587,
    "Y": 415.18203243252123,
    "Zoom": 2.2174356334230239
  }
}